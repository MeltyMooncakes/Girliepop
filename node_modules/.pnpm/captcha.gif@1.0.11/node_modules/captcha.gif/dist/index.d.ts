/**
 * The captcha generator
 */
declare class Captcha {
    private readonly numberOfDots;
    private readonly gifSize;
    private readonly letters;
    private readonly blurImg;
    private readonly filterImg;
    constructor({ numberOfDots, blur, filter }?: Options);
    /**
     *
     * @param size The number of letters
     * @param color The color of the text
     * @returns The gif buffer and the token
     */
    generate(size?: number, color?: Color): {
        buffer: Buffer;
        token: string;
    };
    /**
     *
     * @param min min size
     * @param max max size
     * @returns A number between min and max
     */
    private random;
    /**
     *
     * @param n The index of the letter
     * @param pos The position of the letter
     * @param background The background buffer
     * @param swr The sw buffer
     * @param s1 The s1 value
     * @param s2 The s2 value
     * @returns The new position of the letter
     */
    private letter;
    /**
     *
     * @param background The background buffer
     * @param swr The sw buffer
     * @param s1 The s1 value
     */
    private line;
    /**
     *
     * @param background The background buffer
     * @param dr The dr buffer
     */
    private dots;
    /**
     *
     * @param background The background buffer
     */
    private blur;
    /**
     *
     * @param background The background buffer
     */
    private filter;
    /**
     *
     * @param size The number of letters
     * @returns The background buffer and the token
     */
    private makeCaptcha;
    /**
     *
     * @param background The background buffer
     * @param gif The gif buffer
     * @param color The color of the text
     *
     */
    private makeGif;
}
/**
 * The options for the captcha constructor
 */
interface Options {
    numberOfDots?: number;
    blur?: boolean;
    filter?: boolean;
}
type Color = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17;

export { Captcha, Color, Options };
